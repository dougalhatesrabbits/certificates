; Sample configuration file
[DEFAULT]
baseTlsLocation = /home/david/tls
privateFolder   = %(baseTlsLocation)s/private
certsFolder     = %(baseTlsLocation)s/certs
caCrlFolder     = %(baseTlsLocation)s/crl
encPasswordFile   = %(privateFolder)s/mypass.enc
# ---Encrypt Password file---
cmdEncryptFile    = openssl enc -aes256 -pbkdf2 -salt -in mypass -out %(encPasswordFile)s

; This aligns with the cfgs in *openssl.cnf
[installation]
serialFile     = %(baseTlsLocation)s/serial
indexFile      = %(baseTlsLocation)s/index.txt
crlnumberFile  = %(baseTlsLocation)s/crlnumber
newCertsFolder = %(baseTlsLocation)s/newcerts

[runtime]
sourceOpenSSLConf = /etc/ssl/openssl.cnf
temp              = /tmp/openssl.cnf
# Setting related to log level debug configuration. One of [debug | warning | error]
log_level = debug
server = True
client = True
self   = False
ca     = True
root   = False

[client]
clientKey          = %(privateFolder)s/client.key
clientCSR          = %(certsFolder)s/client.csr
clientCert         = %(certsFolder)s/client.crt
clientCommonName   = client.com
client_opensslConf = %(baseTlsLocation)s/client_openssl.cnf

[server]
serverKey          = %(privateFolder)s/server.key
serverCSR          = %(certsFolder)s/server.csr
serverCert         = %(certsFolder)s/server.crt
serverCommonName   = server.com
server_opensslConf = %(baseTlsLocation)s/server_openssl.cnf
cmd_ServerKeyRSA    = openssl genrsa -aes256 -passout file:%(encPasswordFile)s -out %(serverKey)s 4096
#cmd_ServerCSR       = openssl req -new -key %(serverKey)s -out %(serverCSR)s -sha256 -config %(self_openssl.cnf)s
cmd_ServerCSR       = openssl req -new -key %(serverKey)s -out %(serverCSR)s -sha256 -config %(server_opensslConf)s
#cmd_ServerCSR1      = openssl req -new -key %(serverKey)s %(serverCSR)s -passin file:%(encPasswordFile)s -config %(self_openssl.cnf)
#default?
cmd_ServerCert      = openssl ca -keyfile (caKey)s -cert (caCertificate)s -in %(serverCSR)s -out %(serverCert)s -config (openssl.cnf)s
cmd_VerifyServerCert = openssl verify -CAfile (rootCert)s %(serverCert)s

[self]
selfKey                   = %(privateFolder)s/self.key
selfKeyNoEnc              = %(privateFolder)s/self-noenc.key
selfCSR                   = %(certsFolder)s/self.csr
selfCSRNoEnc              = %(certsFolder)s/self-noenc.csr
selfCertificate           = %(certsFolder)s/self.crt
selfCertificateNoEnc      = %(certsFolder)s/self-noenc.crt
self_opensslConf          = %(baseTlsLocation)s/self_openssl.cnf
cmd_PrivKeyRSA             = openssl genrsa -aes256 -out %(selfKey)s -passout file:%(encPasswordFile)s 4096
cmd_VerifyPrivKeyRSA       = openssl rsa -noout -text -in %(selfKey)s -passin file:%(encPasswordFile)s
cmd_PrivKeyRSA-noenc       = openssl genrsa -out %(selfKeyNoEnc)s 4096
cmd_VerifyPrivKeyRSA-noenc = openssl rsa -noout -text -in %(selfKeyNoEnc)s
# self-signed/ca ecc
cmd_CSR                    = openssl req -new -key %(selfKey)s -out %(selfCSR)s -config %(self_opensslConf)s -passin file:%(encPasswordFile)s
cmd_CSR-noenc             = openssl req -new -key %(selfKeyNoEnc)s -out %(selfCSRNoEnc)s -config %(self_opensslConf)s
cmd_VerifyCSR              = openssl req -noout -text -in %(selfCSR)s
cmd_X509SelfCert           = openssl x509 -req -days 365 -in %(selfCSR)s -signkey %(selfKey)s -out %(selfCertificate)s -passin file:%(encPasswordFile)s
cmd_X509SelfCert-noenc    = openssl x509 -req -days 365 -in %(selfCSRNoEnc)s -signkey %(selfKeyNoEnc)s -out %(selfCertificateNoEnc)s
cmd_VerifySelfCert         = openssl x509 -noout -text -in %(selfCertificate)s
cmd_VerifySelfCert2        = openssl x509 -noout -pubkey -in %(selfCertificate)s
cmd_VerifySelfCert3        = openssl pkey -pubout -in %(selfCertificate)s
cmd_X509Certnoenc          = openssl x509 -req -days 365 -in %(cmdCSR-noenc)s -signkey %(selfKeyNoEnc)s -out %(selfCertificateNoEnc)s

[ca]
caKey               = %(privateFolder)s/ec-cakey.pem
caCertificate       = %(certsFolder)s/ec-cacert.pem
caCommonName        = local.com
opensslConf         = %(baseTlsLocation)s/openssl.cnf
# ca ecc
cmd_PrivKeyECC       = openssl ecparam -out %(caKey)s -name prime256v1 -genkey
cmd_VerifyPrivKeyECC = openssl ecparam -in %(caKey)s -text -noout
cmd_X509CACert       = openssl req -new -x509 -days 365 -config %(opensslConf)s -extensions v3_ca -key %(caKey)s -out %(caCertificate)s
cmd_renewSelfCert = openssl x509 -req -days 365 -in new-server.csr -signkey server.key -out new-server.crt

[root]
rootKey           = %(privateFolder)s/ca.key
rootCert          = %(privateFolder)s/ca.cert.pem
rootCommonName    = local.com
caCrlFile         = %(caCrlFolder)s/rootca.crl
#used for renew
rootCSR = %(privateFolder)s/ca.csr
rootNewCert = %(privateFolder)s/ca.newcert.pem
#default
cmd_RevokeCert    = openssl ca -config (opensslConf)s -revoke (serverCert)s -passin file:%(encPasswordFile)s
cmd_generateCRL   = openssl ca -config (opensslConf)s -gencrl -out %(caCrlFile)s -passin file:%(encPasswordFile)s
cmd_verifyCRL     = openssl crl -in %(caCrlFile)s -text -noout
# root ca rsa
cmd_CAPrivKeyRSA      = openssl genrsa -aes256 -passout file:%(encPasswordFile)s -out %(rootKey)s 4096
cmd_CAVerifyPrivKeyRSA = openssl rsa -noout -text -in %(rootKey)s -passin file:%(encPasswordFile)s
cmd_X509RootCACert = openssl req -new -x509 -days 365 -key ca.key -out ca.cert.pem -passin file:%(encPasswordFile)s -config self_openssl.cnf
cmd_VerifyCACert         = openssl x509 -noout -text -in %(cmd_X509RootCACert)s
cmd_X509SignCert   = openssl x509 -req -days 365 -in server.csr -CA ca.cert.pem -CAkey ca.key -CAcreateserial -out server.crt -passin file:%(encPasswordFile)s
#default
# renew
cmd_x509CAExpiredCert = openssl x509 -req -days -365 -in (serverCSR)s -CA %(rootCert)s -CAkey %(rootKey)s -CAcreateserial -out (serverCert)s
cmd_exportCSR = openssl x509 -x509toreq -in %(rootCert)s -signkey %(rootKey)s -out %(rootCSR)s -passin file:%(encPasswordFile)s
cmd_renewCert = openssl x509 -req -days 365 -in %(rootCSR)s -signkey %(rootKey)s -out %(rootNewCert)s -passin file:%(encPasswordFile)s
cmd_verifiyNewCert = openssl verify -CAfile %(rootNewCert)s -verbose (serverCert)s

# Generic
[commands]
cmd_Key  =
cmd_CSR  =
cmd_Cert =

